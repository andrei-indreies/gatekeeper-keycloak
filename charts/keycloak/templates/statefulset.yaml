apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "keycloak.fullname" . }}
  labels:
    {{- include "keycloak.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "keycloak.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "keycloak.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "keycloak.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.lifecycleHooks }}
          lifecycle:
          {{- tpl . $ | nindent 12 }}
          {{- end }}
          args:
            - start
            - --import-realm
          env:
            - name: KC_DB
              value: {{ .Values.database.db | quote  }}
            - name: KC_DB_URL
              value: {{ .Values.database.url | quote  }}
            - name: KC_DB_USERNAME
              value: {{ .Values.database.user | quote  }}
            - name: KC_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: dbpassword
            - name: KEYCLOAK_ADMIN
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: kcuser
            - name: KEYCLOAK_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: kcpass
            - name: KC_PROXY
              value: {{ .Values.keycloak.proxy | quote  }}
            - name: KC_HTTP_ENABLED
              value: {{ .Values.keycloak.http_enabled | quote }}
            - name: KC_HOSTNAME_STRICT
              value: {{ .Values.keycloak.hostname_strict | quote  }}
            - name: KC_HOSTNAME
              value: {{ .Values.keycloak.hostname | quote  }}
            - name: KC_HOSTNAME_STRICT_HTTPS
              value: {{ .Values.keycloak.hostname_strict | quote  }}
            - name: KC_METRICS_ENABLED
              value: {{ .Values.keycloak.metrics | quote  }}
            - name: KC_HEALTH_ENABLED
              value: {{ .Values.keycloak.healthcheck | quote  }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health/started
              port: http
            initialDelaySeconds: 300
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /health/ready
              port: http
            initialDelaySeconds: 350
            timeoutSeconds: 1
          startupProbe:
            httpGet:
              path: /health/live
              port: http
            initialDelaySeconds: 350
            timeoutSeconds: 1
            failureThreshold: 180
            periodSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: {{ .Values.pvc.name }}
              mountPath: {{ .Values.image.volume.path }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: {{ .Values.pvc.name }}
      spec:
        storageClassName: {{ .Values.pvc.storageClassName }}
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.pvc.storageSize}}
